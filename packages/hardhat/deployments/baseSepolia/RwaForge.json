{
  "address": "0x9027237B996ee70B77b058A5c0Ca640Fc62BAf5d",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_assetId",
          "type": "uint256"
        }
      ],
      "name": "AssetDeactivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "AssetPublished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AssetsPurchasedEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "assets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "category",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokensAvailable",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "assetsPublishedBy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assetId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assetId",
          "type": "uint256"
        }
      ],
      "name": "deactivateAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAssets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "imageURIs",
              "type": "string[]"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensAvailable",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "internalType": "struct RwaForge.Asset[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "getAllAssetsPurchased",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "purchaseID",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "assetID",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "imageUris",
              "type": "string[]"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct RwaForge.AssetPurchased[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_publisher",
          "type": "address"
        }
      ],
      "name": "getAllPublishedAssets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "imageURIs",
              "type": "string[]"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensAvailable",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "internalType": "struct RwaForge.Asset[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assetId",
          "type": "uint256"
        }
      ],
      "name": "getAsset",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "category",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "location",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "imageURIs",
              "type": "string[]"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensAvailable",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "internalType": "struct RwaForge.Asset",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_assetId",
          "type": "uint256"
        }
      ],
      "name": "getPricePerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_assetId",
          "type": "uint256"
        }
      ],
      "name": "getTokensOwnedByUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextAssetId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "category",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "location",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_imageURIs",
          "type": "string[]"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenSupply",
          "type": "uint256"
        }
      ],
      "name": "publishAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "purchaseID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokensOwnedByUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x82ecbfad5610e3143dbce3b3d1297190c4fb06914d1de16aca7727d09df4e629",
  "receipt": {
    "to": null,
    "from": "0xD2692F9df925D18D527ABe8b3d99EE9E9C8d75AE",
    "contractAddress": "0x9027237B996ee70B77b058A5c0Ca640Fc62BAf5d",
    "transactionIndex": 16,
    "gasUsed": "2719279",
    "logsBloom": "0x
    "blockHash": "0x7923f3578dc5afe3ded47d50f44a198c077842c973380aa556954e590daf9bc2",
    "transactionHash": "0x82ecbfad5610e3143dbce3b3d1297190c4fb06914d1de16aca7727d09df4e629",
    "logs": [
      {
        "transactionIndex": 16,
        "blockNumber": 30419208,
        "transactionHash": "0x82ecbfad5610e3143dbce3b3d1297190c4fb06914d1de16aca7727d09df4e629",
        "address": "0x9027237B996ee70B77b058A5c0Ca640Fc62BAf5d",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d2692f9df925d18d527abe8b3d99ee9e9c8d75ae"
        ],
        "data": "0x",
        "logIndex": 557,
        "blockHash": "0x7923f3578dc5afe3ded47d50f44a198c077842c973380aa556954e590daf9bc2"
      }
    ],
    "blockNumber": 30419208,
    "cumulativeGasUsed": "20690803",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8ff5a34b8bb33567199737d0596c8e38",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"}],\"name\":\"AssetDeactivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"AssetPublished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AssetsPurchasedEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensAvailable\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetsPublishedBy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"}],\"name\":\"deactivateAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAssets\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"imageURIs\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensAvailable\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"internalType\":\"struct RwaForge.Asset[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"getAllAssetsPurchased\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"purchaseID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"imageUris\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct RwaForge.AssetPurchased[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_publisher\",\"type\":\"address\"}],\"name\":\"getAllPublishedAssets\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"imageURIs\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensAvailable\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"internalType\":\"struct RwaForge.Asset[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"}],\"name\":\"getAsset\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"imageURIs\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensAvailable\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"internalType\":\"struct RwaForge.Asset\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"}],\"name\":\"getPricePerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"}],\"name\":\"getTokensOwnedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextAssetId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_imageURIs\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply\",\"type\":\"uint256\"}],\"name\":\"publishAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchaseID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokensOwnedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RwaForge.sol\":\"RwaForge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/RwaForge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract RwaForge is Ownable {\\r\\n    //Structs\\r\\n    struct Asset {\\r\\n        uint256 id;\\r\\n        address seller;\\r\\n        string title;\\r\\n        string description;\\r\\n        string category;\\r\\n        string location;\\r\\n        string[] imageURIs;\\r\\n        uint256 price;\\r\\n        uint256 tokenSupply;\\r\\n        uint256 tokensAvailable;\\r\\n        bool isActive;\\r\\n        uint256 date;\\r\\n    }\\r\\n\\r\\n    struct AssetPurchased {\\r\\n        uint256 purchaseID;\\r\\n        uint256 assetID;\\r\\n        address buyer;\\r\\n        string title;\\r\\n        string description;\\r\\n        string category;\\r\\n        string[] imageUris;\\r\\n        uint256 amount;\\r\\n    }\\r\\n\\r\\n    //States\\r\\n    uint256 public nextAssetId;\\r\\n    uint256 public purchaseID;\\r\\n\\r\\n    mapping(uint256 => Asset) public assets;\\r\\n    mapping(address => uint256[]) public assetsPublishedBy;\\r\\n    mapping(address => mapping(uint256 => uint256)) public tokensOwnedByUser;\\r\\n    mapping(address => AssetPurchased[]) private purchasesByBuyer;\\r\\n\\r\\n    //Events\\r\\n    event AssetPublished(uint256 indexed _assetId, address indexed seller);\\r\\n    event AssetsPurchasedEvent(uint256 indexed _assetId, address indexed buyer, uint256 amount);\\r\\n    event AssetDeactivated(uint256 indexed _assetId);\\r\\n\\r\\n    constructor() Ownable(msg.sender) {}\\r\\n\\r\\n    function publishAsset(\\r\\n        string memory title,\\r\\n        string memory description,\\r\\n        string memory category,\\r\\n        string memory location,\\r\\n        string[] memory _imageURIs,\\r\\n        uint256 price,\\r\\n        uint256 tokenSupply\\r\\n    ) external {\\r\\n        require(price > 0, \\\"Price must be positive\\\");\\r\\n        require(tokenSupply > 0, \\\"Token supply must be positive\\\");\\r\\n        require(_imageURIs.length >= 1, \\\"At least one image is required\\\");\\r\\n        require(_imageURIs.length <= 5, \\\"Maximum of 5 images allowed\\\");\\r\\n\\r\\n        for (uint i = 0; i < _imageURIs.length; i++) {\\r\\n            require(bytes(_imageURIs[i]).length > 0, \\\"Image URI cannot be empty\\\");\\r\\n        }\\r\\n\\r\\n        assets[nextAssetId] = Asset({\\r\\n            id: nextAssetId,\\r\\n            seller: msg.sender,\\r\\n            title: title,\\r\\n            description: description,\\r\\n            category: category,\\r\\n            location: location,\\r\\n            imageURIs: _imageURIs,\\r\\n            price: price,\\r\\n            tokenSupply: tokenSupply,\\r\\n            tokensAvailable: tokenSupply,\\r\\n            isActive: true,\\r\\n            date: block.timestamp\\r\\n        });\\r\\n\\r\\n        assetsPublishedBy[msg.sender].push(nextAssetId);\\r\\n        emit AssetPublished(nextAssetId, msg.sender);\\r\\n        nextAssetId++;\\r\\n    }\\r\\n\\r\\n    function buyTokens(uint256 _assetId, uint256 amount) external payable {\\r\\n        Asset storage asset = assets[_assetId];\\r\\n        require(asset.seller != address(0), \\\"Asset does not exist\\\");\\r\\n        require(asset.isActive, \\\"Asset not active\\\");\\r\\n        require(amount > 0 && amount <= asset.tokensAvailable, \\\"Invalid amount\\\");\\r\\n        require(asset.tokenSupply > 0, \\\"Invalid token supply\\\");\\r\\n\\r\\n        uint256 pricePerToken = asset.price / asset.tokenSupply;\\r\\n        uint256 totalCost = pricePerToken * amount;\\r\\n\\r\\n        require(msg.value == totalCost, \\\"Incorrect ETH amount sent\\\");\\r\\n\\r\\n        (bool sent, ) = asset.seller.call{ value: msg.value }(\\\"\\\");\\r\\n        require(sent, \\\"ETH transfer failed\\\");\\r\\n\\r\\n        asset.tokensAvailable -= amount;\\r\\n\\r\\n        if (asset.tokensAvailable == 0) {\\r\\n            asset.isActive = false;\\r\\n            emit AssetDeactivated(_assetId);\\r\\n        }\\r\\n\\r\\n        emit AssetsPurchasedEvent(_assetId, msg.sender, amount);\\r\\n\\r\\n        tokensOwnedByUser[msg.sender][_assetId] += amount;\\r\\n        purchasesByBuyer[msg.sender].push(\\r\\n            AssetPurchased(\\r\\n                purchaseID,\\r\\n                _assetId,\\r\\n                msg.sender,\\r\\n                asset.title,\\r\\n                asset.description,\\r\\n                asset.category,\\r\\n                asset.imageURIs,\\r\\n                amount\\r\\n            )\\r\\n        );\\r\\n        purchaseID++;\\r\\n    }\\r\\n\\r\\n    // === Getters ===\\r\\n    function getAsset(uint256 _assetId) external view returns (Asset memory) {\\r\\n        require(assets[_assetId].seller != address(0), \\\"Asset does not exist\\\");\\r\\n        return assets[_assetId];\\r\\n    }\\r\\n\\r\\n    function getPricePerToken(uint256 _assetId) external view returns (uint256) {\\r\\n        Asset memory asset = assets[_assetId];\\r\\n        require(asset.tokenSupply > 0, \\\"Invalid token supply\\\");\\r\\n        return asset.price / asset.tokenSupply;\\r\\n    }\\r\\n\\r\\n    function deactivateAsset(uint256 _assetId) external {\\r\\n        Asset storage asset = assets[_assetId];\\r\\n        require(asset.seller != address(0), \\\"Asset does not exist\\\");\\r\\n        require(msg.sender == asset.seller || msg.sender == owner(), \\\"Not authorized\\\");\\r\\n        require(asset.isActive, \\\"Asset already inactive\\\");\\r\\n\\r\\n        asset.isActive = false;\\r\\n        emit AssetDeactivated(_assetId);\\r\\n    }\\r\\n\\r\\n    function getAllAssets() external view returns (Asset[] memory) {\\r\\n        Asset[] memory allAssets = new Asset[](nextAssetId);\\r\\n        for (uint256 i = 0; i < nextAssetId; i++) {\\r\\n            allAssets[i] = assets[i];\\r\\n        }\\r\\n        return allAssets;\\r\\n    }\\r\\n\\r\\n    function getAllPublishedAssets(address _publisher) external view returns (Asset[] memory) {\\r\\n        Asset[] memory allAssets = new Asset[](nextAssetId);\\r\\n        for (uint256 i = 0; i < nextAssetId; i++) {\\r\\n            if (assets[i].seller == _publisher) {\\r\\n                allAssets[i] = assets[i];\\r\\n            }\\r\\n        }\\r\\n        return allAssets;\\r\\n    }\\r\\n\\r\\n    function getAllAssetsPurchased(address _buyer) external view returns (AssetPurchased[] memory) {\\r\\n        return purchasesByBuyer[_buyer];\\r\\n    }\\r\\n\\r\\n    function getTokensOwnedByUser(address user, uint256 _assetId) external view returns (uint256) {\\r\\n        return tokensOwnedByUser[user][_assetId];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xab3a3dd2037c374525ab51e28ca51f9aea6cd8b5a0812b7f234a73f98fa61162\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5033806200003957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000044816200004b565b506200009b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612fbf80620000ab6000396000f3fe6080604052600436106100fe5760003560e01c80638ed9131811610095578063b8bfdf9f11610064578063b8bfdf9f1461028e578063cdbbb8e2146102ae578063cf35bdd0146102db578063eac8f5b814610312578063f2fde38b1461033f57600080fd5b80638ed9131814610218578063959b37071461022e578063acf34bc41461024e578063b707d38b1461026e57600080fd5b8063703c66b1116100d1578063703c66b1146101b2578063715018a6146101c85780637975ce28146101dd5780638da5cb5b146101f057600080fd5b806301613531146101035780632acada4d14610136578063319af5e0146101585780636751a89f1461017a575b600080fd5b34801561010f57600080fd5b5061012361011e366004612727565b61035f565b6040519081526020015b60405180910390f35b34801561014257600080fd5b5061014b61038a565b60405161012d91906128de565b34801561016457600080fd5b50610178610173366004612940565b6107be565b005b34801561018657600080fd5b50610123610195366004612727565b600560209081526000928352604080842090915290825290205481565b3480156101be57600080fd5b5061012360025481565b3480156101d457600080fd5b506101786108e9565b6101786101eb366004612959565b6108fd565b3480156101fc57600080fd5b506000546040516001600160a01b03909116815260200161012d565b34801561022457600080fd5b5061012360015481565b34801561023a57600080fd5b50610178610249366004612ad1565b610f89565b34801561025a57600080fd5b5061014b610269366004612bb6565b61130e565b34801561027a57600080fd5b50610123610289366004612727565b611767565b34801561029a57600080fd5b506101236102a9366004612940565b611798565b3480156102ba57600080fd5b506102ce6102c9366004612bb6565b611b92565b60405161012d9190612bd1565b3480156102e757600080fd5b506102fb6102f6366004612940565b611ecc565b60405161012d9b9a99989796959493929190612cc6565b34801561031e57600080fd5b5061033261032d366004612940565b61214e565b60405161012d9190612d61565b34801561034b57600080fd5b5061017861035a366004612bb6565b612527565b6001600160a01b03821660009081526005602090815260408083208484529091529020545b92915050565b6060600060015467ffffffffffffffff8111156103a9576103a961297b565b6040519080825280602002602001820160405280156103e257816020015b6103cf6125e2565b8152602001906001900390816103c75790505b50905060005b6001548110156107b8576000818152600360209081526040918290208251610180810184528154815260018201546001600160a01b031692810192909252600281018054929391929184019161043d90612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461046990612d74565b80156104b65780601f1061048b576101008083540402835291602001916104b6565b820191906000526020600020905b81548152906001019060200180831161049957829003601f168201915b505050505081526020016003820180546104cf90612d74565b80601f01602080910402602001604051908101604052809291908181526020018280546104fb90612d74565b80156105485780601f1061051d57610100808354040283529160200191610548565b820191906000526020600020905b81548152906001019060200180831161052b57829003601f168201915b5050505050815260200160048201805461056190612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461058d90612d74565b80156105da5780601f106105af576101008083540402835291602001916105da565b820191906000526020600020905b8154815290600101906020018083116105bd57829003601f168201915b505050505081526020016005820180546105f390612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461061f90612d74565b801561066c5780601f106106415761010080835404028352916020019161066c565b820191906000526020600020905b81548152906001019060200180831161064f57829003601f168201915b5050505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b828210156107465783829060005260206000200180546106b990612d74565b80601f01602080910402602001604051908101604052809291908181526020018280546106e590612d74565b80156107325780601f1061070757610100808354040283529160200191610732565b820191906000526020600020905b81548152906001019060200180831161071557829003601f168201915b50505050508152602001906001019061069a565b50505090825250600782015460208201526008820154604082015260098201546060820152600a82015460ff1615156080820152600b9091015460a090910152825183908390811061079a5761079a612da8565b602002602001018190525080806107b090612dd4565b9150506103e8565b50919050565b600081815260036020526040902060018101546001600160a01b03166107ff5760405162461bcd60e51b81526004016107f690612ded565b60405180910390fd5b60018101546001600160a01b031633148061082457506000546001600160a01b031633145b6108615760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016107f6565b600a81015460ff166108ae5760405162461bcd60e51b8152602060048201526016602482015275417373657420616c726561647920696e61637469766560501b60448201526064016107f6565b600a8101805460ff1916905560405182907f24eeae42f647ed9085bd63c948c8201b093844d2ad153d02e9c42950d0306ccc90600090a25050565b6108f1612565565b6108fb6000612592565b565b600082815260036020526040902060018101546001600160a01b03166109355760405162461bcd60e51b81526004016107f690612ded565b600a81015460ff1661097c5760405162461bcd60e51b815260206004820152601060248201526f4173736574206e6f742061637469766560801b60448201526064016107f6565b600082118015610990575080600901548211155b6109cd5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b60448201526064016107f6565b6000816008015411610a185760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420746f6b656e20737570706c7960601b60448201526064016107f6565b600081600801548260070154610a2e9190612e1b565b90506000610a3c8483612e3d565b9050803414610a8d5760405162461bcd60e51b815260206004820152601960248201527f496e636f72726563742045544820616d6f756e742073656e740000000000000060448201526064016107f6565b60018301546040516000916001600160a01b03169034908381818185875af1925050503d8060008114610adc576040519150601f19603f3d011682016040523d82523d6000602084013e610ae1565b606091505b5050905080610b285760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b60448201526064016107f6565b84846009016000828254610b3c9190612e54565b90915550506009840154600003610b8557600a8401805460ff1916905560405186907f24eeae42f647ed9085bd63c948c8201b093844d2ad153d02e9c42950d0306ccc90600090a25b604051858152339087907fc63b21442b6554932b9ed046edca78b32b0906d39f00e8b95a35f68a55ca6eff9060200160405180910390a333600090815260056020908152604080832089845290915281208054879290610be6908490612e67565b9091555050336000818152600660209081526040918290208251610100810184526002805482529281018b90529283019390935286018054606083019190610c2d90612d74565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5990612d74565b8015610ca65780601f10610c7b57610100808354040283529160200191610ca6565b820191906000526020600020905b815481529060010190602001808311610c8957829003601f168201915b50505050508152602001866003018054610cbf90612d74565b80601f0160208091040260200160405190810160405280929190818152602001828054610ceb90612d74565b8015610d385780601f10610d0d57610100808354040283529160200191610d38565b820191906000526020600020905b815481529060010190602001808311610d1b57829003601f168201915b50505050508152602001866004018054610d5190612d74565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7d90612d74565b8015610dca5780601f10610d9f57610100808354040283529160200191610dca565b820191906000526020600020905b815481529060010190602001808311610dad57829003601f168201915b5050505050815260200186600601805480602002602001604051908101604052809291908181526020016000905b82821015610ea4578382906000526020600020018054610e1790612d74565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4390612d74565b8015610e905780601f10610e6557610100808354040283529160200191610e90565b820191906000526020600020905b815481529060010190602001808311610e7357829003601f168201915b505050505081526020019060010190610df8565b5050509082525060209081018890528254600180820185556000948552938290208351600890920201908155908201519281019290925560408101516002830180546001600160a01b0319166001600160a01b0390921691909117905560608101519091906003820190610f189082612ec9565b5060808201516004820190610f2d9082612ec9565b5060a08201516005820190610f429082612ec9565b5060c08201518051610f5e91600684019160209091019061264e565b5060e0919091015160079091015560028054906000610f7c83612dd4565b9190505550505050505050565b60008211610fd25760405162461bcd60e51b81526020600482015260166024820152755072696365206d75737420626520706f73697469766560501b60448201526064016107f6565b600081116110225760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e20737570706c79206d75737420626520706f73697469766500000060448201526064016107f6565b6001835110156110745760405162461bcd60e51b815260206004820152601e60248201527f4174206c65617374206f6e6520696d616765206973207265717569726564000060448201526064016107f6565b6005835111156110c65760405162461bcd60e51b815260206004820152601b60248201527f4d6178696d756d206f66203520696d6167657320616c6c6f776564000000000060448201526064016107f6565b60005b835181101561114e5760008482815181106110e6576110e6612da8565b6020026020010151511161113c5760405162461bcd60e51b815260206004820152601960248201527f496d616765205552492063616e6e6f7420626520656d7074790000000000000060448201526064016107f6565b8061114681612dd4565b9150506110c9565b506040805161018081018252600180548083523360208085019182528486018d8152606086018d9052608086018c905260a086018b905260c086018a905260e0860189905261010086018890526101208601889052610140860185905242610160870152600093845260039091529490912083518155905191810180546001600160a01b0319166001600160a01b0390931692909217909155915190919060028201906111fb9082612ec9565b50606082015160038201906112109082612ec9565b50608082015160048201906112259082612ec9565b5060a0820151600582019061123a9082612ec9565b5060c0820151805161125691600684019160209091019061264e565b5060e0820151600782015561010082015160088201556101208201516009820155610140820151600a8201805460ff191691151591909117905561016090910151600b909101553360008181526004602090815260408083206001805482548083018455928652938520909101929092559054905190917f793777d5afad9caf8f6f0115d8a099d03054dd02e5d4d62726125de7d4d4595091a36001805490600061130083612dd4565b919050555050505050505050565b6060600060015467ffffffffffffffff81111561132d5761132d61297b565b60405190808252806020026020018201604052801561136657816020015b6113536125e2565b81526020019060019003908161134b5790505b50905060005b600154811015611760576000818152600360205260409020600101546001600160a01b0380861691160361174e576000818152600360209081526040918290208251610180810184528154815260018201546001600160a01b03169281019290925260028101805492939192918401916113e590612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461141190612d74565b801561145e5780601f106114335761010080835404028352916020019161145e565b820191906000526020600020905b81548152906001019060200180831161144157829003601f168201915b5050505050815260200160038201805461147790612d74565b80601f01602080910402602001604051908101604052809291908181526020018280546114a390612d74565b80156114f05780601f106114c5576101008083540402835291602001916114f0565b820191906000526020600020905b8154815290600101906020018083116114d357829003601f168201915b5050505050815260200160048201805461150990612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461153590612d74565b80156115825780601f1061155757610100808354040283529160200191611582565b820191906000526020600020905b81548152906001019060200180831161156557829003601f168201915b5050505050815260200160058201805461159b90612d74565b80601f01602080910402602001604051908101604052809291908181526020018280546115c790612d74565b80156116145780601f106115e957610100808354040283529160200191611614565b820191906000526020600020905b8154815290600101906020018083116115f757829003601f168201915b5050505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b828210156116ee57838290600052602060002001805461166190612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461168d90612d74565b80156116da5780601f106116af576101008083540402835291602001916116da565b820191906000526020600020905b8154815290600101906020018083116116bd57829003601f168201915b505050505081526020019060010190611642565b50505090825250600782015460208201526008820154604082015260098201546060820152600a82015460ff1615156080820152600b9091015460a090910152825183908390811061174257611742612da8565b60200260200101819052505b8061175881612dd4565b91505061136c565b5092915050565b6004602052816000526040600020818154811061178357600080fd5b90600052602060002001600091509150505481565b60008181526003602090815260408083208151610180810183528154815260018201546001600160a01b031693810193909352600281018054859493840191906117e190612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461180d90612d74565b801561185a5780601f1061182f5761010080835404028352916020019161185a565b820191906000526020600020905b81548152906001019060200180831161183d57829003601f168201915b5050505050815260200160038201805461187390612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461189f90612d74565b80156118ec5780601f106118c1576101008083540402835291602001916118ec565b820191906000526020600020905b8154815290600101906020018083116118cf57829003601f168201915b5050505050815260200160048201805461190590612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461193190612d74565b801561197e5780601f106119535761010080835404028352916020019161197e565b820191906000526020600020905b81548152906001019060200180831161196157829003601f168201915b5050505050815260200160058201805461199790612d74565b80601f01602080910402602001604051908101604052809291908181526020018280546119c390612d74565b8015611a105780601f106119e557610100808354040283529160200191611a10565b820191906000526020600020905b8154815290600101906020018083116119f357829003601f168201915b5050505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b82821015611aea578382906000526020600020018054611a5d90612d74565b80601f0160208091040260200160405190810160405280929190818152602001828054611a8990612d74565b8015611ad65780601f10611aab57610100808354040283529160200191611ad6565b820191906000526020600020905b815481529060010190602001808311611ab957829003601f168201915b505050505081526020019060010190611a3e565b50505090825250600782015460208201526008820154604082015260098201546060820152600a82015460ff1615156080820152600b9091015460a090910152610100810151909150611b765760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420746f6b656e20737570706c7960601b60448201526064016107f6565b8061010001518160e00151611b8b9190612e1b565b9392505050565b6001600160a01b0381166000908152600660209081526040808320805482518185028101850190935280835260609492939192909184015b82821015611ec15760008481526020908190206040805161010081018252600886029092018054835260018101549383019390935260028301546001600160a01b031690820152600382018054919291606084019190611c2990612d74565b80601f0160208091040260200160405190810160405280929190818152602001828054611c5590612d74565b8015611ca25780601f10611c7757610100808354040283529160200191611ca2565b820191906000526020600020905b815481529060010190602001808311611c8557829003601f168201915b50505050508152602001600482018054611cbb90612d74565b80601f0160208091040260200160405190810160405280929190818152602001828054611ce790612d74565b8015611d345780601f10611d0957610100808354040283529160200191611d34565b820191906000526020600020905b815481529060010190602001808311611d1757829003601f168201915b50505050508152602001600582018054611d4d90612d74565b80601f0160208091040260200160405190810160405280929190818152602001828054611d7990612d74565b8015611dc65780601f10611d9b57610100808354040283529160200191611dc6565b820191906000526020600020905b815481529060010190602001808311611da957829003601f168201915b5050505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b82821015611ea0578382906000526020600020018054611e1390612d74565b80601f0160208091040260200160405190810160405280929190818152602001828054611e3f90612d74565b8015611e8c5780601f10611e6157610100808354040283529160200191611e8c565b820191906000526020600020905b815481529060010190602001808311611e6f57829003601f168201915b505050505081526020019060010190611df4565b50505050815260200160078201548152505081526020019060010190611bca565b505050509050919050565b60036020526000908152604090208054600182015460028301805492936001600160a01b0390921692611efe90612d74565b80601f0160208091040260200160405190810160405280929190818152602001828054611f2a90612d74565b8015611f775780601f10611f4c57610100808354040283529160200191611f77565b820191906000526020600020905b815481529060010190602001808311611f5a57829003601f168201915b505050505090806003018054611f8c90612d74565b80601f0160208091040260200160405190810160405280929190818152602001828054611fb890612d74565b80156120055780601f10611fda57610100808354040283529160200191612005565b820191906000526020600020905b815481529060010190602001808311611fe857829003601f168201915b50505050509080600401805461201a90612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461204690612d74565b80156120935780601f1061206857610100808354040283529160200191612093565b820191906000526020600020905b81548152906001019060200180831161207657829003601f168201915b5050505050908060050180546120a890612d74565b80601f01602080910402602001604051908101604052809291908181526020018280546120d490612d74565b80156121215780601f106120f657610100808354040283529160200191612121565b820191906000526020600020905b81548152906001019060200180831161210457829003601f168201915b50505050600783015460088401546009850154600a860154600b90960154949592949193509160ff16908b565b6121566125e2565b6000828152600360205260409020600101546001600160a01b031661218d5760405162461bcd60e51b81526004016107f690612ded565b6000828152600360209081526040918290208251610180810184528154815260018201546001600160a01b03169281019290925260028101805492939192918401916121d890612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461220490612d74565b80156122515780601f1061222657610100808354040283529160200191612251565b820191906000526020600020905b81548152906001019060200180831161223457829003601f168201915b5050505050815260200160038201805461226a90612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461229690612d74565b80156122e35780601f106122b8576101008083540402835291602001916122e3565b820191906000526020600020905b8154815290600101906020018083116122c657829003601f168201915b505050505081526020016004820180546122fc90612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461232890612d74565b80156123755780601f1061234a57610100808354040283529160200191612375565b820191906000526020600020905b81548152906001019060200180831161235857829003601f168201915b5050505050815260200160058201805461238e90612d74565b80601f01602080910402602001604051908101604052809291908181526020018280546123ba90612d74565b80156124075780601f106123dc57610100808354040283529160200191612407565b820191906000526020600020905b8154815290600101906020018083116123ea57829003601f168201915b5050505050815260200160068201805480602002602001604051908101604052809291908181526020016000905b828210156124e157838290600052602060002001805461245490612d74565b80601f016020809104026020016040519081016040528092919081815260200182805461248090612d74565b80156124cd5780601f106124a2576101008083540402835291602001916124cd565b820191906000526020600020905b8154815290600101906020018083116124b057829003601f168201915b505050505081526020019060010190612435565b50505090825250600782015460208201526008820154604082015260098201546060820152600a82015460ff1615156080820152600b9091015460a09091015292915050565b61252f612565565b6001600160a01b03811661255957604051631e4fbdf760e01b8152600060048201526024016107f6565b61256281612592565b50565b6000546001600160a01b031633146108fb5760405163118cdaa760e01b81523360048201526024016107f6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061018001604052806000815260200160006001600160a01b031681526020016060815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600015158152602001600081525090565b828054828255906000526020600020908101928215612694579160200282015b8281111561269457825182906126849082612ec9565b509160200191906001019061266e565b506126a09291506126a4565b5090565b808211156126a05760006126b882826126c1565b506001016126a4565b5080546126cd90612d74565b6000825580601f106126dd575050565b601f01602090049060005260206000209081019061256291905b808211156126a057600081556001016126f7565b80356001600160a01b038116811461272257600080fd5b919050565b6000806040838503121561273a57600080fd5b6127438361270b565b946020939093013593505050565b6000815180845260005b818110156127775760208185018101518683018201520161275b565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501808196508360051b8101915082860160005b858110156127df5782840389526127cd848351612751565b988501989350908401906001016127b5565b5091979650505050505050565b600061018082518452602083015161280f60208601826001600160a01b03169052565b50604083015181604086015261282782860182612751565b915050606083015184820360608601526128418282612751565b9150506080830151848203608086015261285b8282612751565b91505060a083015184820360a08601526128758282612751565b91505060c083015184820360c086015261288f8282612797565b91505060e083015160e0850152610100808401518186015250610120808401518186015250610140808401516128c88287018215159052565b5050610160928301519390920192909252919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561293357603f198886030184526129218583516127ec565b94509285019290850190600101612905565b5092979650505050505050565b60006020828403121561295257600080fd5b5035919050565b6000806040838503121561296c57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156129ba576129ba61297b565b604052919050565b600082601f8301126129d357600080fd5b813567ffffffffffffffff8111156129ed576129ed61297b565b612a00601f8201601f1916602001612991565b818152846020838601011115612a1557600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112612a4357600080fd5b8135602067ffffffffffffffff80831115612a6057612a6061297b565b8260051b612a6f838201612991565b9384528581018301938381019088861115612a8957600080fd5b84880192505b85831015612ac557823584811115612aa75760008081fd5b612ab58a87838c01016129c2565b8352509184019190840190612a8f565b98975050505050505050565b600080600080600080600060e0888a031215612aec57600080fd5b873567ffffffffffffffff80821115612b0457600080fd5b612b108b838c016129c2565b985060208a0135915080821115612b2657600080fd5b612b328b838c016129c2565b975060408a0135915080821115612b4857600080fd5b612b548b838c016129c2565b965060608a0135915080821115612b6a57600080fd5b612b768b838c016129c2565b955060808a0135915080821115612b8c57600080fd5b50612b998a828b01612a32565b93505060a0880135915060c0880135905092959891949750929550565b600060208284031215612bc857600080fd5b611b8b8261270b565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612cb857888303603f190185528151805184528781015188850152868101516001600160a01b0381168886015261010090506060808301518282880152612c4583880182612751565b9250505060808083015186830382880152612c608382612751565b9250505060a08083015186830382880152612c7b8382612751565b9250505060c08083015186830382880152612c968382612797565b60e0948501519790940196909652505094870194925090860190600101612bf8565b509098975050505050505050565b8b81526001600160a01b038b16602082015261016060408201819052600090612cf18382018d612751565b90508281036060840152612d05818c612751565b90508281036080840152612d19818b612751565b905082810360a0840152612d2d818a612751565b60c0840198909852505060e08101949094526101008401929092521515610120830152610140909101529695505050505050565b602081526000611b8b60208301846127ec565b600181811c90821680612d8857607f821691505b6020821081036107b857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612de657612de6612dbe565b5060010190565b602080825260149082015273105cdcd95d08191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b600082612e3857634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761038457610384612dbe565b8181038181111561038457610384612dbe565b8082018082111561038457610384612dbe565b601f821115612ec457600081815260208120601f850160051c81016020861015612ea15750805b601f850160051c820191505b81811015612ec057828155600101612ead565b5050505b505050565b815167ffffffffffffffff811115612ee357612ee361297b565b612ef781612ef18454612d74565b84612e7a565b602080601f831160018114612f2c5760008415612f145750858301515b600019600386901b1c1916600185901b178555612ec0565b600085815260208120601f198616915b82811015612f5b57888601518255948401946001909101908401612f3c565b5085821015612f795787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212209c7d2de39c6eab87df48410bf3387054ffe16aae92352dda485d8f1704b5cb9664736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/RwaForge.sol:RwaForge",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 228,
        "contract": "contracts/RwaForge.sol:RwaForge",
        "label": "nextAssetId",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 230,
        "contract": "contracts/RwaForge.sol:RwaForge",
        "label": "purchaseID",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 235,
        "contract": "contracts/RwaForge.sol:RwaForge",
        "label": "assets",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Asset)208_storage)"
      },
      {
        "astId": 240,
        "contract": "contracts/RwaForge.sol:RwaForge",
        "label": "assetsPublishedBy",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 246,
        "contract": "contracts/RwaForge.sol:RwaForge",
        "label": "tokensOwnedByUser",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 252,
        "contract": "contracts/RwaForge.sol:RwaForge",
        "label": "purchasesByBuyer",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_array(t_struct(AssetPurchased)226_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(AssetPurchased)226_storage)dyn_storage": {
        "base": "t_struct(AssetPurchased)226_storage",
        "encoding": "dynamic_array",
        "label": "struct RwaForge.AssetPurchased[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(AssetPurchased)226_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct RwaForge.AssetPurchased[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(AssetPurchased)226_storage)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Asset)208_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct RwaForge.Asset)",
        "numberOfBytes": "32",
        "value": "t_struct(Asset)208_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Asset)208_storage": {
        "encoding": "inplace",
        "label": "struct RwaForge.Asset",
        "members": [
          {
            "astId": 184,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 186,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "seller",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 188,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "title",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 190,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 192,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "category",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 194,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "location",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 197,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "imageURIs",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 199,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "price",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 201,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "tokenSupply",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 203,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "tokensAvailable",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 205,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "isActive",
            "offset": 0,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 207,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "date",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(AssetPurchased)226_storage": {
        "encoding": "inplace",
        "label": "struct RwaForge.AssetPurchased",
        "members": [
          {
            "astId": 210,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "purchaseID",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 212,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "assetID",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 214,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "buyer",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 216,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "title",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 218,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "description",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 220,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "category",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 223,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "imageUris",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 225,
            "contract": "contracts/RwaForge.sol:RwaForge",
            "label": "amount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}